{"version":3,"sources":["ContactForm/ContactForm.module.css","ContactForm/ContactForm.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","name","number","handleChange","event","_event$currentTarget","currentTarget","value","setState","_defineProperty","handleSubmit","preventDefault","contactForAdd","props","onSubmitData","reset","_createClass","key","_jsx","className","style","contactform","children","_jsxs","type","onSubmit","this","pattern","title","required","onChange","Component","ContactList","deleteId","Id","del","createList","contacts","map","contact","id","data-id","onClick","uuidv4","defaultProps","Filter","setFilterValue","toUpperCase","setFilterToState","App","filter","formSubmitHandler","data","repeatControl","cur","includes","arrayCont","_toConsumableArray","_objectSpread","alert","elementDelete","arr","idContact","elem","deleteContactFromContactList","newArrAfterDel","filterData","filterArr","fArr","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,mC,6JC0EjBC,EAvEE,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GA+Bb,OA/BaP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACfM,MAAQ,CACNC,KAAM,GACNC,OAAQ,IACTb,EACDc,aAAe,SAAAC,GACb,IAAAC,EAGwBD,EAAME,cAAtBL,EAAII,EAAJJ,KAAMM,EAAKF,EAALE,MACdlB,EAAKmB,SAAQC,YAAC,GAAGR,EAAOM,KAEzBlB,EAQDqB,aAAe,SAAAN,GACbA,EAAMO,iBACN,IAAIC,EAAgB,CAAEX,KAAMZ,EAAKW,MAAMC,KAAMC,OAAQb,EAAKW,MAAME,QAEhEb,EAAKwB,MAAMC,aAAaF,GAExBvB,EAAK0B,SACN1B,EAED0B,MAAQ,WACN1B,EAAKmB,SAAS,CAAEP,KAAM,GAAIC,OAAQ,MACnCb,EAkCA,OApDD2B,YAAAhC,EAAA,EAAAiC,IAAA,SAAAV,MAmBA,WACE,OACEW,cAAA,OAAKC,UAAWC,IAAMC,YAAYC,SAChCC,eAAA,QAAMC,KAAK,SAASC,SAAUC,KAAKhB,aAAaY,SAAA,CAC9CC,eAAA,SAAAD,SAAA,CAAO,OAELJ,cAAA,SACEM,KAAK,OACLvB,KAAK,OACL0B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUJ,KAAKvB,aACfI,MAAOmB,KAAK1B,MAAMC,UAGtBsB,eAAA,SAAAD,SAAA,CAAO,SAELJ,cAAA,SACEM,KAAK,MACLvB,KAAK,SACL0B,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SAAUJ,KAAKvB,aACfI,MAAOmB,KAAK1B,MAAME,YAItBgB,cAAA,UAAQM,KAAK,SAAQF,SAAC,yBAI7BtC,EAjEc,CAAS+C,aCApBC,EAAW,SAAA/C,GAAAC,YAAA8C,EAAA/C,GAAA,IAAAE,EAAAC,YAAA4C,GAAA,SAAAA,IAAA,IAAA3C,EAAAC,YAAA,KAAA0C,GAAA,QAAAzC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAkBb,OAlBaP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACfuC,SAAW,SAAAC,GACT7C,EAAKwB,MAAMsB,IAAID,IAChB7C,EACD+C,WAAa,WACX,OAAO/C,EAAKwB,MAAMwB,SAASC,KAAI,SAAAC,GAC7B,OACEhB,eAAA,MAAmBiB,GAAID,EAAQC,GAAGlB,SAAA,IAAAvB,OAC5BwC,EAAQtC,KAAI,MAAAF,OAAKwC,EAAQrC,QAC7BgB,cAAA,UACEuB,UAASF,EAAQC,GACjBE,QAAS,kBAAMrD,EAAK4C,SAASM,EAAQC,KAAIlB,SAC1C,aALMqB,mBAWdtD,EAIA,OAJA2B,YAAAgB,EAAA,EAAAf,IAAA,SAAAV,MAED,WACE,OAAOW,cAAA,MAAAI,SAAKI,KAAKU,mBAClBJ,EAtBc,CAASD,aA4B1BC,EAAYY,aAAe,CACzBP,SAAU,IAGGL,QCdAa,EAnBH,SAAA5D,GAAAC,YAAA2D,EAAA5D,GAAA,IAAAE,EAAAC,YAAAyD,GAAA,SAAAA,IAAA,IAAAxD,EAAAC,YAAA,KAAAuD,GAAA,QAAAtD,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAIR,OAJQP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACVoD,eAAiB,SAAA1C,GACf,IAAIG,EAAQH,EAAME,cAAcC,MAAMwC,cACtC1D,EAAKwB,MAAMmC,iBAAiBzC,IAC7BlB,EASA,OATA2B,YAAA6B,EAAA,EAAA5B,IAAA,SAAAV,MAED,WACE,OACEgB,eAAA,OAAAD,SAAA,CACEJ,cAAA,MAAAI,SAAI,0BACJJ,cAAA,SAAOY,SAAUJ,KAAKoB,wBAG3BD,EAbS,CAASd,aCyENkB,EArEN,SAAAhE,GAAAC,YAAA+D,EAAAhE,GAAA,IAAAE,EAAAC,YAAA6D,GAAA,SAAAA,IAAA,IAAA5D,EAAAC,YAAA,KAAA2D,GAAA,QAAA1D,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAoDL,OApDKP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACPM,MAAQ,CACNqC,SAAU,CACR,CAAEG,GAAI,OAAQvC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsC,GAAI,OAAQvC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEsC,GAAI,OAAQvC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsC,GAAI,OAAQvC,KAAM,iBAAkBC,OAAQ,cAEhDgD,OAAQ,IACT7D,EAED8D,kBAAoB,SAAAC,GAClB/D,EAAKgE,cAAcD,IACpB/D,EAEDgE,cAAgB,SAAAD,GAGd,IADY/D,EAAKW,MAAMqC,SAASC,KAAI,SAAAgB,GAAG,OAAIA,EAAIrD,QAChCsD,SAASH,EAAKnD,MAAO,CAClC,IAAIuD,EAKJ,OAJAA,EAAS,GAAAzD,OAAA0D,YACJpE,EAAKW,MAAMqC,UAAQ,CACtB,CAAEG,GAAIG,cAAU1C,KAAMmD,EAAKnD,KAAMC,OAAQkD,EAAKlD,UAEzCb,EAAKmB,SAAQkD,wBAAC,GAAKrE,EAAKW,OAAK,IAAEqC,SAAUmB,KAEhDG,MAAM,gLAETtE,EAEDuE,cAAgB,SAACC,EAAKC,GAEpB,OADaD,EAAIX,QAAO,SAAAa,GAAI,OAAIA,EAAKvB,KAAOsB,MAE7CzE,EAED2E,6BAA+B,SAAAF,GAC7B,IAAIG,EAAiB5E,EAAKuE,cAAcvE,EAAKW,MAAMqC,SAAUyB,GAC7DzE,EAAKmB,SAAQkD,wBAAC,GACTrE,EAAKW,OAAK,IACbqC,SAAQoB,YAAMQ,OAEjB5E,EAED2D,iBAAmB,SAAAkB,GACjB7E,EAAKmB,SAAQkD,wBAAC,GAAKrE,EAAKW,OAAK,IAAEkD,OAAO,GAADnD,OAAKmE,OAC3C7E,EAED8E,UAAY,SAAAC,GAIV,OAHaA,EAAKlB,QAAO,SAAAI,GAAG,OAC1BA,EAAIrD,KAAK8C,cAAcQ,SAASlE,EAAKW,MAAMkD,YAG9C7D,EAeA,OAfA2B,YAAAiC,EAAA,EAAAhC,IAAA,SAAAV,MAED,WACE,OACEgB,eAAA,OAAKJ,UAAU,MAAKG,SAAA,CAClBJ,cAAA,MAAAI,SAAI,cACJJ,cAAClC,EAAW,CAAC8B,aAAcY,KAAKyB,oBAChCjC,cAAA,MAAAI,SAAI,aACJJ,cAAC2B,EAAM,CAACG,iBAAkBtB,KAAKsB,mBAC/B9B,cAACc,EAAW,CACVK,SAAUX,KAAKyC,UAAUzC,KAAK1B,MAAMqC,UACpCF,IAAKT,KAAKsC,sCAIjBf,EAnEM,CAASlB,aCHlBsC,IAASC,OACPpD,cAACqD,IAAMC,WAAU,CAAAlD,SACfJ,cAAC+B,EAAG,MAENwB,SAASC,eAAe,W","file":"static/js/main.ef5362b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactform\":\"ContactForm_contactform__c4H4L\"};","import style from './ContactForm.module.css';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChange = event => {\r\n    /*     console.log(event.currentTarget);\r\n    console.log(event.currentTarget.name);\r\n    console.log(event.currentTarget.value); */\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n    //this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n  /*   inputNameEvent = event => {\r\n    this.setState({ curName: event.currentTarget.value });\r\n  };\r\n  inputTelEvent = event => {\r\n    this.setState({ curTel: event.currentTarget.value });\r\n  }; */\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    let contactForAdd = { name: this.state.name, number: this.state.number };\r\n    //console.log(this.state);\r\n    this.props.onSubmitData(contactForAdd);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={style.contactform}>\r\n        <form type=\"submit\" onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleChange}\r\n              value={this.state.name}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleChange}\r\n              value={this.state.number}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmitData: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ContactList extends Component {\r\n  deleteId = Id => {\r\n    this.props.del(Id);\r\n  };\r\n  createList = () => {\r\n    return this.props.contacts.map(contact => {\r\n      return (\r\n        <li key={uuidv4()} id={contact.id}>\r\n          {`${contact.name}: ${contact.number}`}\r\n          <button\r\n            data-id={contact.id}\r\n            onClick={() => this.deleteId(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <ul>{this.createList()}</ul>;\r\n  }\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  del: PropTypes.func.isRequired,\r\n};\r\nContactList.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Filter extends Component {\r\n  setFilterValue = event => {\r\n    let value = event.currentTarget.value.toUpperCase();\r\n    this.props.setFilterToState(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Find contacts by name</h4>\r\n        <input onChange={this.setFilterValue}></input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  setFilterToState: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  formSubmitHandler = data => {\r\n    this.repeatControl(data);\r\n  };\r\n\r\n  repeatControl = data => {\r\n    let nameArray = [];\r\n    nameArray = this.state.contacts.map(cur => cur.name);\r\n    if (!nameArray.includes(data.name)) {\r\n      let arrayCont = [];\r\n      arrayCont = [\r\n        ...this.state.contacts,\r\n        { id: uuidv4(), name: data.name, number: data.number },\r\n      ];\r\n      return this.setState({ ...this.state, contacts: arrayCont });\r\n    } else {\r\n      alert(' Контакт вже є у телефонній книзі!!!');\r\n    }\r\n  };\r\n\r\n  elementDelete = (arr, idContact) => {\r\n    let newArr = arr.filter(elem => elem.id !== idContact);\r\n    return newArr;\r\n  };\r\n\r\n  deleteContactFromContactList = idContact => {\r\n    let newArrAfterDel = this.elementDelete(this.state.contacts, idContact);\r\n    this.setState({\r\n      ...this.state,\r\n      contacts: [...newArrAfterDel],\r\n    });\r\n  };\r\n\r\n  setFilterToState = filterData => {\r\n    this.setState({ ...this.state, filter: `${filterData}` });\r\n  };\r\n\r\n  filterArr = fArr => {\r\n    let newArr = fArr.filter(cur =>\r\n      cur.name.toUpperCase().includes(this.state.filter),\r\n    );\r\n    return newArr;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmitData={this.formSubmitHandler} />\r\n        <h1>Contacts</h1>\r\n        <Filter setFilterToState={this.setFilterToState} />\r\n        <ContactList\r\n          contacts={this.filterArr(this.state.contacts)}\r\n          del={this.deleteContactFromContactList}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}